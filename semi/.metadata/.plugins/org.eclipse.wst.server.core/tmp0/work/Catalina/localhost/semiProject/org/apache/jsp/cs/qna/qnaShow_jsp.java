/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-28 07:47:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.cs.qna;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.net.URLEncoder;
import java.util.ArrayList;
import cs.QnABoardBean;
import cs.QnABoardDBBean;
import java.text.SimpleDateFormat;
import java.sql.Timestamp;

public final class qnaShow_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("cs.QnABoardBean");
    _jspx_imports_classes.add("java.sql.Timestamp");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("cs.QnABoardDBBean");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 request.setCharacterEncoding("UTF-8"); 
      out.write('\r');
      out.write('\n');

	QnABoardDBBean qdb = QnABoardDBBean.getInstance();
	QnABoardBean qbb = qdb.getBoard(Integer.parseInt(request.getParameter("b_id")),true);
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");
	String pageNum = request.getParameter("pageNum");
	
	String user_grade = "";
	int grade = 0;
	if(session.getAttribute("grade") == null){
		response.sendRedirect("main.jsp?pages=error");
	} else {
		user_grade = String.valueOf(session.getAttribute("grade"));
		grade = Integer.parseInt(user_grade);
	}
	int b_id = qbb.getB_id();
	QnABoardBean qbb1 = qdb.getFileName(b_id);
	String fileName = qbb.getB_rfname();
	String category="", b_category="";
	b_category = qbb.getB_category();
	if(b_category.equals("회원정보")){
		category = URLEncoder.encode("회원정보","UTF-8");
	} else if(b_category.equals("상품문의")){
		category = URLEncoder.encode("상품문의","UTF-8");
	} else if(b_category.equals("주문/결제")){
		category = URLEncoder.encode("주문/결제","UTF-8");
	} else if(b_category.equals("배송")){
		category = URLEncoder.encode("배송","UTF-8");
	} else if(b_category.equals("교환/취소")){
		category = URLEncoder.encode("교환/취소","UTF-8");
	} else if(b_category.equals("서비스")){
		category = URLEncoder.encode("서비스","UTF-8");
	}
	if(qbb.getB_secret().equals("Y")&&!qbb.getU_id().equals(session.getAttribute("id"))){

      out.write("\r\n");
      out.write("		<script>\r\n");
      out.write("			alert(\"작성자만 읽을 수 있습니다.\");\r\n");
      out.write("			history.back();\r\n");
      out.write("		</script>	\r\n");

	}

      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <title></title>\r\n");
      out.write("  </head>\r\n");
      out.write("<body class=\"vertical  dark  \">\r\n");
      out.write("    <div class=\"wrapper\">\r\n");
      out.write("    <div class=\"container-fluid\">\r\n");
      out.write("          <div class=\"row justify-content-center\">\r\n");
      out.write("            <div class=\"col-12\">\r\n");
      out.write("              <h2 class=\"page-title\">문의 확인</h2>\r\n");
      out.write("              <div class=\"row\">\r\n");
      out.write("                <div class=\"col-md-12\">\r\n");
      out.write("                  <div class=\"card shadow mb-4\">\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                      <form class=\"needs-validation\" novalidate>\r\n");
      out.write("                        <div class=\"form-row\">\r\n");
      out.write("                          <div class=\"col-md-6 mb-3\">\r\n");
      out.write("                            <span>글 번호</span>\r\n");
      out.write("                            <span class=\"form-control\">");
      out.print( b_id );
      out.write("</span>\r\n");
      out.write("                          </div>\r\n");
      out.write("                          <div class=\"col-md-6 mb-3\">\r\n");
      out.write("                            <span>문의 유형</span>\r\n");
      out.write("                            <span class=\"form-control\">");
      out.print( b_category );
      out.write("</span>\r\n");
      out.write("                          </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-row\">\r\n");
      out.write("                          <div class=\"col-md-6 mb-3\">\r\n");
      out.write("                            <span>작성자</span>\r\n");
      out.write("                            <span class=\"form-control\">");
      out.print( qbb.getU_id() );
      out.write("</span>\r\n");
      out.write("                          </div>\r\n");
      out.write("                          <div class=\"col-md-6 mb-3\">\r\n");
      out.write("                            <span>작성일</span>\r\n");
      out.write("                            <span class=\"form-control\">");
      out.print( sdf.format(qbb.getB_date()) );
      out.write("</span>\r\n");
      out.write("                          </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-row\">\r\n");
      out.write("                          <div class=\"col-md-4 mb-3\">\r\n");
      out.write("                            <span>조회수</span>\r\n");
      out.write("                            <span class=\"form-control\">");
      out.print( qbb.getB_view() );
      out.write("</span>\r\n");
      out.write("                          </div>\r\n");
      out.write("                          <div class=\"col-md-8 mb-3\">\r\n");
      out.write("                            <span>이미지</span>\r\n");
      out.write("                            <span class=\"form-control\">\r\n");
      out.write("                            ");

								if(qbb.getB_fname() != null){
							
      out.write("\r\n");
      out.write("									<img src=\"../images/download.png\" style=\"width:20px;\" />\r\n");
      out.write("									<a href=\"../cs/qna/FileDownload.jsp?fileNum=");
      out.print( qbb.getB_id() );
      out.write("\">(파일명 :");
      out.print( qbb.getB_rfname() );
      out.write(")</a>\r\n");
      out.write("							");

								}else{
							
      out.write("\r\n");
      out.write("									업로드한 사진이 없습니다.\r\n");
      out.write("							");

								}
							
      out.write("\r\n");
      out.write("							</span>\r\n");
      out.write("                          </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-group mb-3\">\r\n");
      out.write("                        	<span>제목</span>\r\n");
      out.write("                            <span class=\"form-control\">");
      out.print( qbb.getB_title() );
      out.write("</span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-group mb-3\">\r\n");
      out.write("                          <span>문의 내용</span>\r\n");
      out.write("                          <span class=\"form-control\" style=\"height: 350px;\">");
      out.print( qbb.getB_content() );
      out.write("</span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-group mb-3\">\r\n");
      out.write("	                      	<label for=\"fileinput\">업로드 이미지</label>\r\n");
      out.write("							<img src=\"../upload/");
      out.print( fileName );
      out.write("\" alt=\"이미지 없음\" style=\"width:250px; height:250px;\" />\r\n");
      out.write("	                      </div>\r\n");
      out.write("                        <div style=\"text-align:center;\">\r\n");
      out.write("	                        <input class=\"btn btn-primary\" type=\"button\" value=\"목록\" onclick=\"location.href='main.jsp?pages=../cs/qna/qnaList_u&pageNum=");
      out.print( pageNum );
      out.write("'\" />\r\n");
      out.write("							");
 
								if(qbb.getU_id().equals(session.getAttribute("id"))||grade==1) {
							
      out.write("\r\n");
      out.write("							<input class=\"btn btn-primary\" type=\"button\" value=\"삭제\" onclick=\"location.href='main.jsp?pages=../cs/qna/qnaDelete&b_id=");
      out.print( qbb.getB_id() );
      out.write("&pageNum=");
      out.print( pageNum );
      out.write("'\" />\r\n");
      out.write("							");
 
								}
							
      out.write("\r\n");
      out.write("							");
 
								if(qbb.getU_id().equals(session.getAttribute("id"))){
							
      out.write("\r\n");
      out.write("							<input class=\"btn btn-primary\" type=\"button\" value=\"수정\" onclick=\"location.href='main.jsp?pages=../cs/qna/qnaEdit&b_id=");
      out.print( qbb.getB_id() );
      out.write("&pageNum=");
      out.print( pageNum );
      out.write("&b_category=");
      out.print( category );
      out.write("'\" />\r\n");
      out.write("							");
 
								}
							
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("                      </form>\r\n");
      out.write("                    </div> <!-- /.card-body -->\r\n");
      out.write("                  </div> <!-- /.card -->\r\n");
      out.write("                </div> <!-- /.col -->\r\n");
      out.write("              </div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
