/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-28 07:16:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.product;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import product.ProductBean;
import product.ProductDBBean;
import member.LikeBean;
import member.LikeDBBean;
import java.text.SimpleDateFormat;
import java.sql.Timestamp;
import java.util.ArrayList;

public final class likeList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("product.ProductBean");
    _jspx_imports_classes.add("member.LikeBean");
    _jspx_imports_classes.add("product.ProductDBBean");
    _jspx_imports_classes.add("java.sql.Timestamp");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("member.LikeDBBean");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("utf-8");

	String pageNum =""; 
	if(request.getParameter("pageNum")!=null){
		request.getParameter("pageNum");//
	}else{
		pageNum = "1";
	}
	
	String n_user_id = "test";
	String category_code="";
	session.setAttribute("n_user_id", n_user_id);
	
	if(request.getParameter("category_code")!=null){
		category_code = request.getParameter("category_code").toString();
	}
	System.out.println("카테고리 ================"+category_code);

	String id = (String)session.getAttribute("id");
	System.out.println("id==========================="+id);
	LikeDBBean db = LikeDBBean.getInstance();
	ArrayList<LikeBean> likeList = db.likeList(id);
	ProductDBBean productdb = ProductDBBean.getInstance();
	
	int i, product_price, product_number, file_number;
	String user_id, product_like, product_name;

      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <title>like</title>\r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("    	.cardtwo {\r\n");
      out.write("    		width:33.3%;\r\n");
      out.write("    		float: left;\r\n");
      out.write("    	}\r\n");
      out.write("    </style>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body class=\"vertical  light  \">\r\n");
      out.write("      <div class=\"container-fluid\">\r\n");
      out.write("            <h6 class=\"mb-3\">좋아요</h6>\r\n");
      out.write("	        <div class=\"row justify-content-center\">\r\n");
      out.write("	            <div class=\"img_contianer mb-4\">\r\n");
      out.write("		     	 ");

					String stored_file_name;
					System.out.print(likeList.size());
					for(i=0; i<likeList.size(); i++){
						LikeBean like = likeList.get(i);
						
						user_id = like.getUser_id();
						product_number = like.getProduct_number();
						product_like = like.getProduct_like();
						product_name = like.getProduct_name();
						product_price = like.getProduct_price();
						file_number = like.getFile_number();
						
						stored_file_name = productdb.getImg(product_number).getStored_file_name();
						
					
      out.write("\r\n");
      out.write("	              <div class=\"cardtwo border-0 bg-transparent\">\r\n");
      out.write("	                <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/");
      out.print( stored_file_name );
      out.write("\" alt=\"...\" class=\"card-img-top img-fluid rounded\" >\r\n");
      out.write("	                <div class=\"card-body\" style=\"text-align:center;\" >\r\n");
      out.write("	                    <span class=\"badge badge-light text-muted mr-2\" style=\"font-size:1.125em;\"><strong>제품명 : ");
      out.print( product_name );
      out.write("</strong></span><br>\r\n");
      out.write("	                    <span class=\"badge badge-pill badge-light text-muted\" style=\"font-size:1.125em;\"><strong>가격 : ");
      out.print( product_price );
      out.write("원</strong></span><br>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div> <!-- .card -->\r\n");
      out.write("				");

						}
				
      out.write("\r\n");
      out.write("			</div> <!-- .card-deck -->\r\n");
      out.write("		</div>\r\n");
      out.write("	</div> <!-- .row -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
