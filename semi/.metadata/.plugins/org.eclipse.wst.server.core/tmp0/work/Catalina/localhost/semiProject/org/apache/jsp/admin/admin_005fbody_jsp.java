/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-27 04:46:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import cs.QnABoardDBBean;
import cs.QnABoardBean;
import product.ProductBean;
import product.ProductDBBean;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.sql.Timestamp;
import member.MemberDBBean;
import member.MemberBean;
import order.OrderManageBean;
import java.util.ArrayList;
import order.OrderManageDBBean;

public final class admin_005fbody_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.MemberDBBean");
    _jspx_imports_classes.add("cs.QnABoardBean");
    _jspx_imports_classes.add("product.ProductBean");
    _jspx_imports_classes.add("product.ProductDBBean");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("order.OrderManageBean");
    _jspx_imports_classes.add("java.sql.Timestamp");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("cs.QnABoardDBBean");
    _jspx_imports_classes.add("order.OrderManageDBBean");
    _jspx_imports_classes.add("member.MemberBean");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	OrderManageDBBean omdb = OrderManageDBBean.getInstance();
	
	int o_rank = 0;
	long o_dNum;
	int p_num, p_count, p_price, productAllCount, noStock, qnaAllCount, qnaNoCount;
	String o_num, o_dStat, refund, stat, pageNum, user_id, user_pwd, user_name
	, user_phone1, user_phone2, user_phone3, user_email, user_pcode, user_raddr
	, user_jibun, user_detailaddr, requested;
	Timestamp user_regdate;
	
	ArrayList<OrderManageBean> list = omdb.orderList("1","N");
	String s_user_id="";
	
	int orderCount=list.size();
	
	if(orderCount > 5){
		orderCount=5;
	}
	if(request.getParameter("search_user_id")!=null){
		s_user_id = request.getParameter("search_user_id");
	} 
	MemberBean.s_user_id = s_user_id;
	
	MemberBean member = new MemberBean();
	MemberDBBean memberDB = MemberDBBean.getInstance();
	ArrayList<MemberBean> memberList = memberDB.listMember("1",s_user_id);
	ArrayList<Integer> n_numbers = new ArrayList<>();
	
	int memberCount = memberList.size();
	if(memberCount > 5){
		memberCount=5;
	}
	Date date = new Date();
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
	String today = sdf.format(date);
	
	ProductDBBean productDB = ProductDBBean.getInstance();
	ProductBean product = new ProductBean();
	product = productDB.productCount();
	productAllCount = product.getCount();
	noStock = product.getNoStock();
	
	QnABoardBean qna = new QnABoardBean();
	QnABoardDBBean board = QnABoardDBBean.getInstance();
	qna = board.getCount(today);
	qnaNoCount = qna.getTodayNoAns();
	qnaAllCount = qna.getAllNoAns();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"row\">\r\n");
      out.write("  <div class=\"col-md-6 col-xl-6 mb-4\">\r\n");
      out.write("    <div class=\"card shadow bg-primary text-white border-0\">\r\n");
      out.write("      <div class=\"card-body\">\r\n");
      out.write("        <div class=\"row align-items-center\">\r\n");
      out.write("          <div class=\"col-3 text-center\">\r\n");
      out.write("            <span class=\"circle circle-sm bg-primary-light\">\r\n");
      out.write("              <i class=\"fe fe-16 fe-shopping-bag text-white mb-0\"></i>\r\n");
      out.write("            </span>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"col pr-0\">\r\n");
      out.write("            <p class=\"small text-muted mb-0\">총 상품 수(재고 없는 상품)</p>\r\n");
      out.write("            <span class=\"h3 mb-0 text-white\">");
      out.print( productAllCount );
      out.write('(');
      out.print( noStock );
      out.write(")</span>\r\n");
      out.write("            <!-- 오늘 등록된 상품 수 -->\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"col-md-6 col-xl-6 mb-4\">\r\n");
      out.write("    <div class=\"card shadow bg-primary text-white border-0\">\r\n");
      out.write("      <div class=\"card-body\">\r\n");
      out.write("        <div class=\"row align-items-center\">\r\n");
      out.write("          <div class=\"col-3 text-center\">\r\n");
      out.write("            <span class=\"circle circle-sm bg-primary-light\">\r\n");
      out.write("              <i class=\"fe fe-16 fe-shopping-bag text-white mb-0\"></i>\r\n");
      out.write("            </span>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"col pr-0\">\r\n");
      out.write("            <p class=\"small text-muted mb-0\">미 답변 문의(신규 문의)</p>\r\n");
      out.write("            <span class=\"h3 mb-0 text-white\">");
      out.print( qnaAllCount );
      out.write('(');
      out.print( qnaNoCount );
      out.write(")</span>\r\n");
      out.write("            <!-- 오늘 등록된 상품 수 -->\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"row\">\r\n");
      out.write("   <div class=\"container-fluid\">\r\n");
      out.write("     <div class=\"row justify-content-center\">\r\n");
      out.write("       <div class=\"col-12\">\r\n");
      out.write("         <h2 class=\"h3 mb-3 page-title\">신규 주문</h2>\r\n");
      out.write("         <div class=\"card shadow\">\r\n");
      out.write("           <div class=\"card-body\">\r\n");
      out.write("         <div style=\"text-align: center;\">\r\n");
      out.write("         <table class=\"table table-borderless table-hover\">\r\n");
      out.write("           <thead>\r\n");
      out.write("             <tr role=\"row\">\r\n");
      out.write("               <th>주문 번호</th>\r\n");
      out.write("               <th>상품 이름(번호)</th>\r\n");
      out.write("               <th>수량</th>\r\n");
      out.write("               <th>금액</th>\r\n");
      out.write("               <th>주문자</th>\r\n");
      out.write("               <th>주문일자</th>\r\n");
      out.write("               <th>요청사항</th>\r\n");
      out.write("             </tr>\r\n");
      out.write("           </thead>\r\n");
      out.write("           <tbody>\r\n");
      out.write("    ");

		for(int i=0; i < orderCount; i++) {
			OrderManageBean omb = list.get(i);
			o_dNum = omb.getOrder_detail_number();
			o_num = omb.getOrder_number();
			p_num = omb.getProduct_number();
			p_count = omb.getProduct_count();
			p_price = omb.getProduct_price();
			o_dStat = omb.getOrder_detail_status();
			refund = omb.getRefund_check();
			if(omb.getRequested() != null){
				requested = omb.getRequested();
			} else {
				requested = "없음";
			}
			omb = omdb.getOrder(o_dNum);
			String p_name = omb.getProduct_name();
			String u_id = omb.getUser_id();
			String o_date = sdf.format(omb.getOrder_date());
			
			if(o_dStat.equals("입금 완료")&&o_date.equals(today)){
	
      out.write("\r\n");
      out.write("           		 <tr>\r\n");
      out.write("					<td>");
      out.print(o_num);
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(p_name);
      out.write('(');
      out.print(p_num);
      out.write(")</td>\r\n");
      out.write("					<td>");
      out.print( p_count );
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(p_price);
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(u_id);
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(o_date);
      out.write("</td>\r\n");
      out.write("					<td>");
      out.print(requested);
      out.write("</td>\r\n");
      out.write("	");
	
			}
		}
	
      out.write("\r\n");
      out.write("                 </tr>\r\n");
      out.write("               </tbody>\r\n");
      out.write("             </table>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("           </div>\r\n");
      out.write("         </div>\r\n");
      out.write("       </div> <!-- .row -->\r\n");
      out.write("     </div> <!-- .container-fluid -->\r\n");
      out.write(" </div> <!-- .wrapper -->\r\n");
      out.write(" <div class=\"row\">\r\n");
      out.write("        <div class=\"container-fluid\">\r\n");
      out.write("          <div class=\"row justify-content-center\">\r\n");
      out.write("            <div class=\"col-12\">\r\n");
      out.write("              <div class=\"row\">\r\n");
      out.write("                <!-- Small table -->\r\n");
      out.write("                <div class=\"col-md-12 my-4\">\r\n");
      out.write("                  <h2 class=\"h3 mb-3 page-title\">신규 회원</h2>\r\n");
      out.write("                  <div class=\"card shadow\">\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                      <!-- table -->\r\n");
      out.write("                      <div style=\"text-align: center;\">\r\n");
      out.write("                      <table class=\"table table-borderless table-hover\">\r\n");
      out.write("                        <thead>\r\n");
      out.write("                          <tr>\r\n");
      out.write("                            <th>ID</th>\r\n");
      out.write("							<th>이름</th>\r\n");
      out.write("							<th>전화번호</th>\r\n");
      out.write("							<th>이메일</th>\r\n");
      out.write("							<th>가입일</th>\r\n");
      out.write("							<th>주소</th>\r\n");
      out.write("                          </tr>\r\n");
      out.write("                        </thead>\r\n");
      out.write("                        <tbody>\r\n");
      out.write("		");

			for(int i=0; i<memberCount;i++){
				member = memberList.get(i);
				
				user_id = member.getUser_id();
				user_pwd=member.getUser_pwd();
				user_name=member.getUser_name();
				user_phone1=member.getUser_phone1();
				user_phone2=member.getUser_phone2();
				user_phone3=member.getUser_phone3();
				user_email=member.getUser_email();
				user_pcode=member.getUser_pcode();
				user_raddr=member.getUser_raddr();
				user_jibun=member.getUser_jibun();
				user_detailaddr=member.getUser_detailaddr();
				user_regdate=member.getUser_regdate();
			
				if(sdf.format(user_regdate).equals(today)){
				
		
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class=\"mb-0 text-muted\">");
      out.print( user_id);
      out.write("</td>\r\n");
      out.write("					<td class=\"mb-0 text-muted\">");
      out.print( user_name );
      out.write("</td>\r\n");
      out.write("					<td class=\"mb-0 text-muted\">\r\n");
      out.write("						");
      out.print( user_phone1 );
      out.write('-');
      out.print( user_phone2 );
      out.write('-');
      out.print( user_phone3 );
      out.write("\r\n");
      out.write("					</td>\r\n");
      out.write("					<td class=\"mb-0 text-muted\">\r\n");
      out.write("						");
      out.print( user_email );
      out.write("\r\n");
      out.write("					</td>\r\n");
      out.write("					<td class=\"mb-0 text-muted\">\r\n");
      out.write("						");
      out.print( sdf.format(user_regdate) );
      out.write("\r\n");
      out.write("					</td>\r\n");
      out.write("					<td class=\"mb-0 text-muted\">\r\n");
      out.write("						우편번호 : ");
      out.print( user_pcode );
      out.write(" <br>\r\n");
      out.write("						도 로 명 : ");
      out.print( user_raddr );
      out.write(" <br>\r\n");
      out.write("						지     번 : ");
      out.print( user_jibun );
      out.write(" <br>\r\n");
      out.write("						상세주소 : ");
      out.print( user_detailaddr );
      out.write("\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("		");

				}
			}
		
      out.write("\r\n");
      out.write("			</table>\r\n");
      out.write("			</div>\r\n");
      out.write("				\r\n");
      out.write("			</div>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div> <!-- customized table -->\r\n");
      out.write("      </div> <!-- end section -->\r\n");
      out.write("    </div> <!-- .col-12 -->\r\n");
      out.write("  </div> <!-- .row -->\r\n");
      out.write("</div> <!-- .container-fluid -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
