/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-27 06:34:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.cs.qna;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.net.URLDecoder;
import cs.QnABoardBean;
import cs.QnABoardDBBean;

public final class qnaEdit_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("cs.QnABoardBean");
    _jspx_imports_classes.add("java.net.URLDecoder");
    _jspx_imports_classes.add("cs.QnABoardDBBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	QnABoardDBBean qdb = QnABoardDBBean.getInstance();
	QnABoardBean qbb = qdb.getBoard(Integer.parseInt(request.getParameter("b_id")),false);
	String content = qbb.getB_content();
	content = content.replace("<br>","\r\n");
	String pageNum = request.getParameter("pageNum");
	String b_category = request.getParameter("b_category");


      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <title></title>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body class=\"vertical  dark  \">\r\n");
      out.write("    <div class=\"wrapper\">\r\n");
      out.write("        <div class=\"container-fluid\">\r\n");
      out.write("          <div class=\"row justify-content-center\">\r\n");
      out.write("            <div class=\"col-12\">\r\n");
      out.write("              <h2 class=\"page-title\">글 수정</h2>\r\n");
      out.write("              <br />\r\n");
      out.write("              <form action=\"main.jsp?pages=../cs/qna/qnaEdit_ok&b_id=");
      out.print( qbb.getB_id() );
      out.write("&pageNum=");
      out.print( pageNum );
      out.write("\" method=\"post\" name=\"write_frm\" enctype=\"multipart/form-data\">\r\n");
      out.write("              <div class=\"card shadow mb-2\">\r\n");
      out.write("                  <div class=\"card shadow\">\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                      <div class=\"form-group mb-3\">\r\n");
      out.write("                        <label for=\"custom-select\">문의 유형</label>\r\n");
      out.write("                        <input type=\"text\" id=\"custom-select\" class=\"form-control\" name=\"b_category\" value=\"");
      out.print(b_category );
      out.write("\" readonly />\r\n");
      out.write("                      </div>\r\n");
      out.write("                      <div class=\"form-group mb-3\">\r\n");
      out.write("                        <label for=\"example-palaceholder\">제목</label>\r\n");
      out.write("                        <input type=\"text\" id=\"example-palaceholder\" class=\"form-control\" name=\"b_title\" value=\"");
      out.print( qbb.getB_title() );
      out.write("\" />\r\n");
      out.write("                      </div>\r\n");
      out.write("                      <div class=\"form-group mb-3\">\r\n");
      out.write("                        <label for=\"example-textarea\">문의 내용</label>\r\n");
      out.write("                        <textarea class=\"form-control\" name=\"b_content\" id=\"example-textarea\" rows=\"10\">");
      out.print( content );
      out.write("</textarea>\r\n");
      out.write("                      </div>\r\n");
      out.write("                      <div class=\"form-group mb-3\">\r\n");
      out.write("                        <label for=\"customFile\">사진 업로드</label>\r\n");
      out.write("                        <div class=\"custom-file\">\r\n");
      out.write("                          <input type=\"file\" name=\"b_fname\" id=\"customFile\" />\r\n");
      out.write("                          <label for=\"customFile\"></label>\r\n");
      out.write("                          	기존 업로드 파일 :<span id=\"showFiles\">");
      out.print( qbb.getB_rfname() );
      out.write("</span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                      </div>\r\n");
      out.write("                      <div class=\"form-group mb-3\">\r\n");
      out.write("                        <label for=\"example-password\">비밀번호</label>\r\n");
      out.write("                        <input type=\"password\" name=\"b_pwd\" id=\"example-password\" class=\"form-control\" placeholder=\"비밀번호를 입력해주세요.\">\r\n");
      out.write("                      </div>\r\n");
      out.write("                      <div class=\"form-check\">\r\n");
      out.write("                        <input class=\"form-check-input\" type=\"checkbox\" name=\"b_secret\" id=\"defaultCheck1\">비밀글\r\n");
      out.write("                      </div>\r\n");
      out.write("                  	<div style=\"text-align:center\">\r\n");
      out.write("	                  <div aria-label=\"Basic example\">\r\n");
      out.write("	                    <input type=\"button\" class=\"btn btn-primary\" value=\"목록\" onclick=\"location.href='main.jsp?pages=../cs/qna/qnaList_u&pageNum=");
      out.print( pageNum );
      out.write("'\" />\r\n");
      out.write("		                 <input type=\"reset\" class=\"btn btn-primary\" value=\"다시 작성\" />\r\n");
      out.write("		                 <input type=\"button\" class=\"btn btn-primary\" value=\"작성\" onclick=\"check_ok()\" />\r\n");
      out.write("	                  </div>\r\n");
      out.write("                	</div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                	</div>\r\n");
      out.write("              	</div> <!-- end section -->\r\n");
      out.write("              </form>\r\n");
      out.write("            </div> <!-- .col-12 -->\r\n");
      out.write("          </div> <!-- .row -->\r\n");
      out.write("	<script type=\"text/javascript\" src=\"../js/board.js\" charset=\"UTF-8\"></script>\r\n");
      out.write("	<script src=\"../js/jquery.min.js\"></script>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
