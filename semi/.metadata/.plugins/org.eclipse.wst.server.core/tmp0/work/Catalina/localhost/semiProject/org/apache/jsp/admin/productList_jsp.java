/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-27 04:39:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.SimpleDateFormat;
import java.sql.Timestamp;
import product.ProductBean;
import java.util.ArrayList;
import product.ProductDBBean;

public final class productList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("product.ProductBean");
    _jspx_imports_classes.add("product.ProductDBBean");
    _jspx_imports_classes.add("java.sql.Timestamp");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      product.ProductBean product = null;
      product = (product.ProductBean) _jspx_page_context.getAttribute("product", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (product == null){
        product = new product.ProductBean();
        _jspx_page_context.setAttribute("product", product, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');

	String pageNumber="";

	if(request.getParameter("pageNum")!=null){
		pageNumber=request.getParameter("pageNum");
	}else{
		pageNumber="1";
		response.sendRedirect("adminIndex.jsp?pages=productList&pageNum=1");
	}
	ProductDBBean db = ProductDBBean.getInstance();
	
	ArrayList<ProductBean> productList = db.productList(pageNumber);
	
	SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-dd HH:mm");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"../js/admin.js?123\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"vertical  dark  \">\r\n");
      out.write("    <div class=\"wrapper\">\r\n");
      out.write("        <div class=\"container-fluid\">\r\n");
      out.write("          <div class=\"row justify-content-center\">\r\n");
      out.write("            <div class=\"col-12\">\r\n");
      out.write("              <div class=\"row\">\r\n");
      out.write("                <!-- Small table -->\r\n");
      out.write("                <div class=\"col-md-12 my-4\">\r\n");
      out.write("                  <h2 class=\"h3 mb-3 page-title\">상품 정보 조회</h2>\r\n");
      out.write("                  <div class=\"card shadow\">\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                      <!-- table -->\r\n");
      out.write("                      <div style=\"text-align: center;\">\r\n");
      out.write("                      <table class=\"table table-borderless table-hover\">\r\n");
      out.write("                        <thead>\r\n");
      out.write("                          <tr>\r\n");
      out.write("                            <th>상품 번호</th>\r\n");
      out.write("							<th>분류</th>\r\n");
      out.write("							<th>상품명</th>\r\n");
      out.write("							<th>가격</th>\r\n");
      out.write("							<th>재고량</th>\r\n");
      out.write("							<th>제품 등록(수정)일</th>\r\n");
      out.write("                            <th>Action</th>\r\n");
      out.write("                          </tr>\r\n");
      out.write("                        </thead>\r\n");
      out.write("  ");

		for(int i=0;i<productList.size();i++){
			product = productList.get(i);
			
			int product_number = product.getProduct_number();
			String product_name = product.getProduct_name();
			int product_price = product.getProduct_price();
			String category_code = product.getCategory_code();
			int product_stock = product.getProduct_stock();
			Timestamp product_date = product.getProduct_date();
			int product_fileNumber;
			String thumbName ="";
			product = db.getImg(product_number);
			if(product.getStored_thumbnail() != ""){
				thumbName = product.getStored_thumbnail();
			}
	
      out.write("\r\n");
      out.write("                        <tbody>\r\n");
      out.write("                        <tr>\r\n");
      out.write("							<td class=\"mb-0 text-muted\">");
      out.print( product_number );
      out.write("</td>\r\n");
      out.write("							<td class=\"mb-0 text-muted\">");
      out.print( category_code );
      out.write("</td>\r\n");
      out.write("							<td class=\"mb-0 text-muted\">\r\n");
      out.write("								");

									if(thumbName==null){
								
      out.write("\r\n");
      out.write("										<div style=\"background-color: #777\">이미지 없음</div>\r\n");
      out.write("								");

									} else{
								
      out.write("\r\n");
      out.write("										<div>\r\n");
      out.write("											<!-- <img src=\"http://localhost:8181/semiProject/upload/test.jpg\" width=\"100px\"> -->\r\n");
      out.write("											<img src=\"../img/");
      out.print( thumbName );
      out.write("\" width=\"100px\">\r\n");
      out.write("								");

									}
								
      out.write("\r\n");
      out.write("											");
      out.print( product_name );
      out.write("\r\n");
      out.write("										</div>\r\n");
      out.write("							</td>\r\n");
      out.write("							<td class=\"mb-0 text-muted\">");
      out.print( product_price );
      out.write("</td>\r\n");
      out.write("							<td class=\"mb-0 text-muted\">");
      out.print( product_stock );
      out.write("</td>\r\n");
      out.write("							<td class=\"mb-0 text-muted\">");
      out.print( sdf.format(product_date) );
      out.write("</td>\r\n");
      out.write("							<td class=\"mb-0 text-muted\">\r\n");
      out.write("                              <div class=\"dropdown\">\r\n");
      out.write("                                <button class=\"btn btn-sm dropdown-toggle\" type=\"button\" id=\"dr1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n");
      out.write("                                  <span class=\"text-muted sr-only\">Action</span>\r\n");
      out.write("                                </button>\r\n");
      out.write("                                <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dr1\">\r\n");
      out.write("                                  <a class=\"dropdown-item\" href=\"adminIndex.jsp?pages=productEdit&product_number=");
      out.print( product_number );
      out.write("&pageNum=");
      out.print( pageNumber );
      out.write("\">수정</a>\r\n");
      out.write("                                  <a class=\"dropdown-item\" href=\"#\" onclick=\"delCheck(");
      out.print(i);
      out.write(")\">삭제</a>\r\n");
      out.write("                                  <input type=\"hidden\" id=\"delete");
      out.print(i);
      out.write("\" value=\"adminIndex.jsp?pages=product_delete_ok&product_number=");
      out.print( product_number );
      out.write("&pageNum=");
      out.print( pageNumber );
      out.write("\"/>\r\n");
      out.write("                                </div>\r\n");
      out.write("                              </div>\r\n");
      out.write("                            </td>\r\n");
      out.write("						</tr>\r\n");
      out.write("					</tbody>\r\n");
      out.write("	");
	
		}
	
      out.write("\r\n");
      out.write("	 			</table>\r\n");
      out.write("			    <nav aria-label=\"Table Paging\" class=\"mb-0 text-muted\">\r\n");
      out.write("			      	<ul class=\"pagination justify-content-center mb-0\">\r\n");
      out.write("						");
      out.print( ProductBean.pageNumber(5, "adminIndex") );
      out.write("\r\n");
      out.write("					</ul>\r\n");
      out.write("			    </nav>\r\n");
      out.write("        	</div>\r\n");
      out.write("      	</div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
