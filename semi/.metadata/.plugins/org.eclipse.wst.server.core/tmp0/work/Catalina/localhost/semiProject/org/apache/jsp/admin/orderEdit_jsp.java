/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-21 08:04:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import order.OrderManageBean;
import order.OrderManageDBBean;

public final class orderEdit_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("order.OrderManageBean");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("order.OrderManageDBBean");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 request.setCharacterEncoding("UTF-8"); 
      out.write('\r');
      out.write('\n');

	OrderManageDBBean omdb = OrderManageDBBean.getInstance();
	OrderManageBean omb = omdb.getBoard(Integer.parseInt(request.getParameter("o_dNum")));
	String pageNum = request.getParameter("pageNum");
	if(pageNum == null){
		pageNum = "1";
	}
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");
	String o_dStat = request.getParameter("o_dStat");
	int p_count = omb.getProduct_count();
	int p_price = omb.getProduct_price();

      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("    <meta name=\"description\" content=\"\">\r\n");
      out.write("    <meta name=\"author\" content=\"\">\r\n");
      out.write("    <title>document</title>\r\n");
      out.write("    <!-- 부트스트랩 CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\" integrity=\"sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N\" crossorigin=\"anonymous\">\r\n");
      out.write("    <!-- Simple bar CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/simplebar.css\">\r\n");
      out.write("    <!-- Fonts CSS -->\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Overpass:ital,wght@0,100;0,200;0,300;0,400;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,600;1,700;1,800;1,900&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <!-- Icons CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/feather.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/select2.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/dropzone.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/uppy.min.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/jquery.steps.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/jquery.timepicker.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/quill.snow.css\">\r\n");
      out.write("    <!-- Date Range Picker CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/daterangepicker.css\">\r\n");
      out.write("    <!-- App CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/app-light.css\" id=\"lightTheme\" disabled>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/app-dark.css\" id=\"darkTheme\">\r\n");
      out.write("  </head>\r\n");
      out.write("  <body class=\"vertical  dark  \">\r\n");
      out.write("    <div class=\"wrapper\">\r\n");
      out.write("        <div class=\"container-fluid\">\r\n");
      out.write("          <div class=\"row justify-content-center\">\r\n");
      out.write("            <div class=\"col-12\">\r\n");
      out.write("              <h2 class=\"page-title\">주문서 수정</h2>\r\n");
      out.write("              <div class=\"row\">\r\n");
      out.write("                <div class=\"col-md-12\">\r\n");
      out.write("                  <div class=\"card shadow mb-4\">\r\n");
      out.write("                    <div class=\"card-header\">\r\n");
      out.write("                      <strong class=\"card-title\">주문 내역</strong>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                      <form action=\"orderEdit_ok.jsp?pageNum=");
      out.print( pageNum );
      out.write("\" method=\"post\" name=\"order_frm\">\r\n");
      out.write("                        <div class=\"form-row\">\r\n");
      out.write("                          <div class=\"form-group col-md-4\">\r\n");
      out.write("                            <label for=\"inputEmail4\">주문 일자</label>\r\n");
      out.write("                            <input type=\"text\" class=\"form-control\" id=\"inputEmail5\" value=\"");
      out.print( sdf.format(omb.getOrder_date()) );
      out.write("\" readonly />\r\n");
      out.write("                          </div>\r\n");
      out.write("                          <div class=\"form-group col-md-4\">\r\n");
      out.write("                            <label for=\"inputPassword4\">주문 번호</label>\r\n");
      out.write("                            <input type=\"text\" class=\"form-control\" name=\"order_number\" id=\"inputPassword5\" value=\"");
      out.print( omb.getOrder_number() );
      out.write("\" readonly />\r\n");
      out.write("                          </div>\r\n");
      out.write("                          <div class=\"form-group col-md-4\">\r\n");
      out.write("                            <label for=\"inputState\">주문 상태</label>\r\n");
      out.write("                            <select id=\"status\" class=\"form-control\" name=\"order_detail_status\">\r\n");
      out.write("	                            <option value=\"입금 완료\">입금 완료</option>\r\n");
      out.write("		                        <option value=\"배송 준비\">배송 준비</option>\r\n");
      out.write("		                        <option value=\"배송중\">배송중</option>\r\n");
      out.write("		                        <option value=\"배송 완료\">배송 완료</option>\r\n");
      out.write("		                        <option value=\"구매 확정\">구매 확정</option>\r\n");
      out.write("                            </select>\r\n");
      out.write("                          </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-row\">\r\n");
      out.write("                          <div class=\"form-group col-md-3\">\r\n");
      out.write("                            <label for=\"inputEmail4\">주문자 ID</label>\r\n");
      out.write("                            <input type=\"text\" class=\"form-control\" id=\"inputEmail5\" value=\"");
      out.print( omb.getUser_id() );
      out.write("\" readonly />\r\n");
      out.write("                          </div>\r\n");
      out.write("                          <div class=\"form-group col-md-3\">\r\n");
      out.write("                            <label for=\"inputEmail4\">상품 번호</label>\r\n");
      out.write("                            <input type=\"text\" class=\"form-control\" id=\"inputEmail5\" value=\"");
      out.print( omb.getProduct_number() );
      out.write("\" readonly />\r\n");
      out.write("                          </div>\r\n");
      out.write("                          <div class=\"form-group col-md-3\">\r\n");
      out.write("                            <label for=\"inputPassword4\">수량(개)</label>\r\n");
      out.write("                            <input type=\"text\" class=\"form-control\" name=\"product_count\" id=\"inputPassword5\" value=\"");
      out.print( p_count );
      out.write("\" />\r\n");
      out.write("                          </div>\r\n");
      out.write("                          <div class=\"form-group col-md-3\">\r\n");
      out.write("                            <label for=\"inputPassword4\">금액(원)</label>\r\n");
      out.write("                            <input type=\"text\" class=\"form-control\" name=\"product_price\" id=\"inputPassword5\" value=\"");
      out.print( p_price );
      out.write("\" />\r\n");
      out.write("                          </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-row\">\r\n");
      out.write("                          <div class=\"form-group col-md-3\">\r\n");
      out.write("                            <label for=\"inputPassword4\">수령자</label>\r\n");
      out.write("                            <input type=\"text\" class=\"form-control\" name=\"receiver_name\" id=\"inputPassword5\" value=\"");
      out.print( omb.getReceiver_name() );
      out.write("\" />\r\n");
      out.write("                          </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-row\">\r\n");
      out.write("                          <div class=\"form-group col-md-2\">\r\n");
      out.write("                          	<label for=\"inputPassword4\">전화번호</label>\r\n");
      out.write("                          </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-row\">\r\n");
      out.write("                          <div class=\"form-group col-md-2\">\r\n");
      out.write("                            <select id=\"phone\" class=\"form-control\" name=\"receiver_phone1\">\r\n");
      out.write("	                            <option value=\"010\">010</option>\r\n");
      out.write("		                        <option value=\"02\">02</option>\r\n");
      out.write("		                        <option value=\"031\">031</option>\r\n");
      out.write("		                        <option value=\"051\">051</option>\r\n");
      out.write("                            </select>\r\n");
      out.write("                          </div>\r\n");
      out.write("                          <div class=\"form-group col-md-2\">\r\n");
      out.write("                            <input type=\"text\" class=\"form-control\" name=\"receiver_phone2\" value=\"");
      out.print( omb.getReceiver_phone2() );
      out.write("\" maxlength=\"4\" />\r\n");
      out.write("                          </div>\r\n");
      out.write("                          <div class=\"form-group col-md-2\">\r\n");
      out.write("                            <input type=\"text\" class=\"form-control\" name=\"receiver_phone3\" value=\"");
      out.print( omb.getReceiver_phone3() );
      out.write("\" maxlength=\"4\" />\r\n");
      out.write("                          </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("	                    <div class=\"form-row\">\r\n");
      out.write("	                    	<div class=\"form-group col-md-3\">\r\n");
      out.write("                          		<label for=\"inputPassword4\">수령 주소</label>\r\n");
      out.write("                          	</div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-row\">\r\n");
      out.write("	                        <div class=\"form-group col-md-1\">\r\n");
      out.write("	                        	<input type=\"text\" class=\"form-control\" name=\"receiver_pcode\" id=\"sample4_postcode\" value=\"");
      out.print( omb.getReceiver_pcode() );
      out.write("\">\r\n");
      out.write("	                        </div>\r\n");
      out.write("	                        <div class=\"form-group col-md-1\">\r\n");
      out.write("							<input type=\"button\" class=\"form-control\" onclick=\"sample4_execDaumPostcode()\" value=\"주소 변경\"><br>\r\n");
      out.write("                        	</div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-row\">\r\n");
      out.write("	                        <div class=\"form-group col-md-4\">\r\n");
      out.write("								<input type=\"text\" class=\"form-control\" name=\"receiver_raddr\" id=\"sample4_roadAddress\" value=\"");
      out.print( omb.getReceiver_raddr() );
      out.write("\">\r\n");
      out.write("								<input type=\"hidden\" class=\"form-control\" name=\"receiver_jibun\" id=\"sample4_jibunAddress\" value=\"");
      out.print( omb.getReceiver_jibun() );
      out.write("\">\r\n");
      out.write("								<span id=\"guide\" style=\"color:#999;display:none;\"></span>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"form-group col-md-4\">\r\n");
      out.write("								<input type=\"text\" class=\"form-control\" name=\"receiver_detailaddr\" id=\"sample4_detailAddress\" value=\"");
      out.print( omb.getReceiver_detailaddr() );
      out.write("\">\r\n");
      out.write("								<input type=\"hidden\" id=\"sample4_extraAddress\" placeholder=\"참고항목\">\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						\r\n");
      out.write("                        <div style=\"text-align:center;\">\r\n");
      out.write("	                        <input type=\"button\" class=\"btn btn-primary\" value=\"주문 수정\" onclick=\"check()\" />\r\n");
      out.write("	                        <input type=\"reset\" class=\"btn btn-primary\">\r\n");
      out.write("	                        <input type=\"button\" class=\"btn btn-primary\" value=\"주문 목록\" onclick=\"history.go(-1)\" />\r\n");
      out.write("                        </div>\r\n");
      out.write("                      </form>\r\n");
      out.write("                    </div> <!-- /. card-body -->\r\n");
      out.write("                  </div> <!-- /. card -->\r\n");
      out.write("                </div> <!-- /. col -->\r\n");
      out.write("              </div> <!-- /. end-section -->\r\n");
      out.write("            </div> <!-- .col-12 -->\r\n");
      out.write("          </div> <!-- .row -->\r\n");
      out.write("        </div> <!-- .container-fluid -->\r\n");
      out.write("    </div> <!-- .wrapper -->\r\n");
      out.write("	<script src=\"js/jquery.min.js\"></script>\r\n");
      out.write("    <script src=\"js/popper.min.js\"></script>\r\n");
      out.write("    <script src=\"js/moment.min.js\"></script>\r\n");
      out.write("    <script src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("    <script src=\"js/simplebar.min.js\"></script>\r\n");
      out.write("    <script src='js/daterangepicker.js'></script>\r\n");
      out.write("    <script src='js/jquery.stickOnScroll.js'></script>\r\n");
      out.write("    <script src=\"js/tinycolor-min.js\"></script>\r\n");
      out.write("    <script src=\"js/config.js\"></script>\r\n");
      out.write("    <script src=\"js/d3.min.js\"></script>\r\n");
      out.write("    <script src=\"js/topojson.min.js\"></script>\r\n");
      out.write("    <script src=\"js/datamaps.all.min.js\"></script>\r\n");
      out.write("    <script src=\"js/datamaps-zoomto.js\"></script>\r\n");
      out.write("    <script src=\"js/datamaps.custom.js\"></script>\r\n");
      out.write("    <script src=\"js/Chart.min.js\"></script>\r\n");
      out.write("	<script type=\"text/javascript\" src=\"admin.js\" charset=\"UTF-8\"></script>\r\n");
      out.write("	<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("      /* defind global options */\r\n");
      out.write("      Chart.defaults.global.defaultFontFamily = base.defaultFontFamily;\r\n");
      out.write("      Chart.defaults.global.defaultFontColor = colors.mutedColor;\r\n");
      out.write("    </script>\r\n");
      out.write("    <script src=\"js/gauge.min.js\"></script>\r\n");
      out.write("    <script src=\"js/jquery.sparkline.min.js\"></script>\r\n");
      out.write("    <script src=\"js/apexcharts.min.js\"></script>\r\n");
      out.write("    <script src=\"js/apexcharts.custom.js\"></script>\r\n");
      out.write("    <script src='js/jquery.mask.min.js'></script>\r\n");
      out.write("    <script src='js/select2.min.js'></script>\r\n");
      out.write("    <script src='js/jquery.steps.min.js'></script>\r\n");
      out.write("    <script src='js/jquery.validate.min.js'></script>\r\n");
      out.write("    <script src='js/jquery.timepicker.js'></script>\r\n");
      out.write("    <script src='js/dropzone.min.js'></script>\r\n");
      out.write("    <script src='js/uppy.min.js'></script>\r\n");
      out.write("    <script src='js/quill.min.js'></script>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("		/*주문 수정 페이지에서 넘겨 받은 주문 상태가 기본으로 선택되게 하는 스크립트(Jquery 필요)*/\r\n");
      out.write("		$(function(){\r\n");
      out.write("			$(\"#status > option[value='");
      out.print( o_dStat );
      out.write("']\").prop(\"selected\", true);\r\n");
      out.write("		});\r\n");
      out.write("		/* 변수를 받아야해서 스크립트 파일에 넣지 못함 */\r\n");
      out.write("	</script>\r\n");
      out.write("    <script>\r\n");
      out.write("      $('.select2').select2(\r\n");
      out.write("      {\r\n");
      out.write("        theme: 'bootstrap4',\r\n");
      out.write("      });\r\n");
      out.write("      $('.select2-multi').select2(\r\n");
      out.write("      {\r\n");
      out.write("        multiple: true,\r\n");
      out.write("        theme: 'bootstrap4',\r\n");
      out.write("      });\r\n");
      out.write("      $('.drgpicker').daterangepicker(\r\n");
      out.write("      {\r\n");
      out.write("        singleDatePicker: true,\r\n");
      out.write("        timePicker: false,\r\n");
      out.write("        showDropdowns: true,\r\n");
      out.write("        locale:\r\n");
      out.write("        {\r\n");
      out.write("          format: 'MM/DD/YYYY'\r\n");
      out.write("        }\r\n");
      out.write("      });\r\n");
      out.write("      $('.time-input').timepicker(\r\n");
      out.write("      {\r\n");
      out.write("        'scrollDefault': 'now',\r\n");
      out.write("        'zindex': '9999' /* fix modal open */\r\n");
      out.write("      });\r\n");
      out.write("      /** date range picker */\r\n");
      out.write("      if ($('.datetimes').length)\r\n");
      out.write("      {\r\n");
      out.write("        $('.datetimes').daterangepicker(\r\n");
      out.write("        {\r\n");
      out.write("          timePicker: true,\r\n");
      out.write("          startDate: moment().startOf('hour'),\r\n");
      out.write("          endDate: moment().startOf('hour').add(32, 'hour'),\r\n");
      out.write("          locale:\r\n");
      out.write("          {\r\n");
      out.write("            format: 'M/DD hh:mm A'\r\n");
      out.write("          }\r\n");
      out.write("        });\r\n");
      out.write("      }\r\n");
      out.write("      var start = moment().subtract(29, 'days');\r\n");
      out.write("      var end = moment();\r\n");
      out.write("\r\n");
      out.write("      function cb(start, end)\r\n");
      out.write("      {\r\n");
      out.write("        $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));\r\n");
      out.write("      }\r\n");
      out.write("      $('#reportrange').daterangepicker(\r\n");
      out.write("      {\r\n");
      out.write("        startDate: start,\r\n");
      out.write("        endDate: end,\r\n");
      out.write("        ranges:\r\n");
      out.write("        {\r\n");
      out.write("          'Today': [moment(), moment()],\r\n");
      out.write("          'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\r\n");
      out.write("          'Last 7 Days': [moment().subtract(6, 'days'), moment()],\r\n");
      out.write("          'Last 30 Days': [moment().subtract(29, 'days'), moment()],\r\n");
      out.write("          'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n");
      out.write("          'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\r\n");
      out.write("        }\r\n");
      out.write("      }, cb);\r\n");
      out.write("      cb(start, end);\r\n");
      out.write("      $('.input-placeholder').mask(\"00/00/0000\",\r\n");
      out.write("      {\r\n");
      out.write("        placeholder: \"__/__/____\"\r\n");
      out.write("      });\r\n");
      out.write("      $('.input-zip').mask('00000-000',\r\n");
      out.write("      {\r\n");
      out.write("        placeholder: \"____-___\"\r\n");
      out.write("      });\r\n");
      out.write("      $('.input-money').mask(\"#.##0,00\",\r\n");
      out.write("      {\r\n");
      out.write("        reverse: true\r\n");
      out.write("      });\r\n");
      out.write("      $('.input-phoneus').mask('(000) 000-0000');\r\n");
      out.write("      $('.input-mixed').mask('AAA 000-S0S');\r\n");
      out.write("      $('.input-ip').mask('0ZZ.0ZZ.0ZZ.0ZZ',\r\n");
      out.write("      {\r\n");
      out.write("        translation:\r\n");
      out.write("        {\r\n");
      out.write("          'Z':\r\n");
      out.write("          {\r\n");
      out.write("            pattern: /[0-9]/,\r\n");
      out.write("            optional: true\r\n");
      out.write("          }\r\n");
      out.write("        },\r\n");
      out.write("        placeholder: \"___.___.___.___\"\r\n");
      out.write("      });\r\n");
      out.write("      // editor\r\n");
      out.write("      var editor = document.getElementById('editor');\r\n");
      out.write("      if (editor)\r\n");
      out.write("      {\r\n");
      out.write("        var toolbarOptions = [\r\n");
      out.write("          [\r\n");
      out.write("          {\r\n");
      out.write("            'font': []\r\n");
      out.write("          }],\r\n");
      out.write("          [\r\n");
      out.write("          {\r\n");
      out.write("            'header': [1, 2, 3, 4, 5, 6, false]\r\n");
      out.write("          }],\r\n");
      out.write("          ['bold', 'italic', 'underline', 'strike'],\r\n");
      out.write("          ['blockquote', 'code-block'],\r\n");
      out.write("          [\r\n");
      out.write("          {\r\n");
      out.write("            'header': 1\r\n");
      out.write("          },\r\n");
      out.write("          {\r\n");
      out.write("            'header': 2\r\n");
      out.write("          }],\r\n");
      out.write("          [\r\n");
      out.write("          {\r\n");
      out.write("            'list': 'ordered'\r\n");
      out.write("          },\r\n");
      out.write("          {\r\n");
      out.write("            'list': 'bullet'\r\n");
      out.write("          }],\r\n");
      out.write("          [\r\n");
      out.write("          {\r\n");
      out.write("            'script': 'sub'\r\n");
      out.write("          },\r\n");
      out.write("          {\r\n");
      out.write("            'script': 'super'\r\n");
      out.write("          }],\r\n");
      out.write("          [\r\n");
      out.write("          {\r\n");
      out.write("            'indent': '-1'\r\n");
      out.write("          },\r\n");
      out.write("          {\r\n");
      out.write("            'indent': '+1'\r\n");
      out.write("          }], // outdent/indent\r\n");
      out.write("          [\r\n");
      out.write("          {\r\n");
      out.write("            'direction': 'rtl'\r\n");
      out.write("          }], // text direction\r\n");
      out.write("          [\r\n");
      out.write("          {\r\n");
      out.write("            'color': []\r\n");
      out.write("          },\r\n");
      out.write("          {\r\n");
      out.write("            'background': []\r\n");
      out.write("          }], // dropdown with defaults from theme\r\n");
      out.write("          [\r\n");
      out.write("          {\r\n");
      out.write("            'align': []\r\n");
      out.write("          }],\r\n");
      out.write("          ['clean'] // remove formatting button\r\n");
      out.write("        ];\r\n");
      out.write("        var quill = new Quill(editor,\r\n");
      out.write("        {\r\n");
      out.write("          modules:\r\n");
      out.write("          {\r\n");
      out.write("            toolbar: toolbarOptions\r\n");
      out.write("          },\r\n");
      out.write("          theme: 'snow'\r\n");
      out.write("        });\r\n");
      out.write("      }\r\n");
      out.write("      // Example starter JavaScript for disabling form submissions if there are invalid fields\r\n");
      out.write("      (function()\r\n");
      out.write("      {\r\n");
      out.write("        'use strict';\r\n");
      out.write("        window.addEventListener('load', function()\r\n");
      out.write("        {\r\n");
      out.write("          // Fetch all the forms we want to apply custom Bootstrap validation styles to\r\n");
      out.write("          var forms = document.getElementsByClassName('needs-validation');\r\n");
      out.write("          // Loop over them and prevent submission\r\n");
      out.write("          var validation = Array.prototype.filter.call(forms, function(form)\r\n");
      out.write("          {\r\n");
      out.write("            form.addEventListener('submit', function(event)\r\n");
      out.write("            {\r\n");
      out.write("              if (form.checkValidity() === false)\r\n");
      out.write("              {\r\n");
      out.write("                event.preventDefault();\r\n");
      out.write("                event.stopPropagation();\r\n");
      out.write("              }\r\n");
      out.write("              form.classList.add('was-validated');\r\n");
      out.write("            }, false);\r\n");
      out.write("          });\r\n");
      out.write("        }, false);\r\n");
      out.write("      })();\r\n");
      out.write("    </script>\r\n");
      out.write("    <script>\r\n");
      out.write("      var uptarg = document.getElementById('drag-drop-area');\r\n");
      out.write("      if (uptarg)\r\n");
      out.write("      {\r\n");
      out.write("        var uppy = Uppy.Core().use(Uppy.Dashboard,\r\n");
      out.write("        {\r\n");
      out.write("          inline: true,\r\n");
      out.write("          target: uptarg,\r\n");
      out.write("          proudlyDisplayPoweredByUppy: false,\r\n");
      out.write("          theme: 'dark',\r\n");
      out.write("          width: 770,\r\n");
      out.write("          height: 210,\r\n");
      out.write("          plugins: ['Webcam']\r\n");
      out.write("        }).use(Uppy.Tus,\r\n");
      out.write("        {\r\n");
      out.write("          endpoint: 'https://master.tus.io/files/'\r\n");
      out.write("        });\r\n");
      out.write("        uppy.on('complete', (result) =>\r\n");
      out.write("        {\r\n");
      out.write("          console.log('Upload complete! We’ve uploaded these files:', result.successful)\r\n");
      out.write("        });\r\n");
      out.write("      }\r\n");
      out.write("    </script>\r\n");
      out.write("    <script src=\"js/apps.js\"></script>\r\n");
      out.write("    <!-- Global site tag (gtag.js) - Google Analytics -->\r\n");
      out.write("    <script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-56159088-1\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("      window.dataLayer = window.dataLayer || [];\r\n");
      out.write("\r\n");
      out.write("      function gtag()\r\n");
      out.write("      {\r\n");
      out.write("        dataLayer.push(arguments);\r\n");
      out.write("      }\r\n");
      out.write("      gtag('js', new Date());\r\n");
      out.write("      gtag('config', 'UA-56159088-1');\r\n");
      out.write("    </script>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
