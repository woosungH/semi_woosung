/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-28 08:10:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.cart;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import product.ProductBean;
import product.ProductDBBean;
import cart.CartBean;
import cart.CartDBBean;
import java.sql.Timestamp;
import java.util.ArrayList;

public final class cartList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("cart.CartDBBean");
    _jspx_imports_classes.add("product.ProductBean");
    _jspx_imports_classes.add("product.ProductDBBean");
    _jspx_imports_classes.add("cart.CartBean");
    _jspx_imports_classes.add("java.sql.Timestamp");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String id = (String)session.getAttribute("id");
	String name = (String)session.getAttribute("name");
	if(id == null){

      out.write("\r\n");
      out.write("		<script>\r\n");
      out.write("			alert(\"로그인이 필요한 페이지입니다.\");\r\n");
      out.write("			location.href=\"main.jsp\"\r\n");
      out.write("		</script>\r\n");

	}
	CartDBBean cartdb = CartDBBean.getInstance();
	ArrayList<CartBean> cartList = cartdb.getCart(id);
	
	ProductDBBean productdb = ProductDBBean.getInstance();
	
	int i, product_price=0, cart_number=0, product_number, product_count=0, ship=3000;
	String user_id, product_name;
	int total_price = 0;

      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <title>장바구니</title>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body class=\"vertical  light  \">\r\n");
      out.write("    <div class=\"wrapper\">\r\n");
      out.write("        <div class=\"container-fluid\">\r\n");
      out.write("          <div class=\"row justify-content-center\">\r\n");
      out.write("            <div class=\"col-12\">\r\n");
      out.write("              <div class=\"row\">\r\n");
      out.write("                <!-- Small table -->\r\n");
      out.write("                <div class=\"col-md-12 my-4\">\r\n");
      out.write("                  <h2 class=\"h4 mb-1\">장 바 구 니</h2>\r\n");
      out.write("                  <p class=\"mb-3\">");
      out.print( name );
      out.write("님의 장바구니 입니다.</p>\r\n");
      out.write("                  <div class=\"card shadow\">\r\n");
      out.write("                    <div class=\"card-body\" style=\"text-align:center\">\r\n");
      out.write("                    <form method=\"post\" action=\"main.jsp?pages=../buy/buy_body\" name=\"cart_frm\">\r\n");
      out.write("                      <!-- table -->\r\n");
      out.write("                      <table class=\"table table-borderless table-hover\">\r\n");
      out.write("                        <thead>\r\n");
      out.write("                          <tr>\r\n");
      out.write("                          	<th>선택</th>\r\n");
      out.write("                          	<th>번호</th>\r\n");
      out.write("                            <th class=\"w-25\">제품사진</th>	\r\n");
      out.write("                            <th>제품이름</th>\r\n");
      out.write("                            <th>수량</th>\r\n");
      out.write("                            <th>가격(원)</th>\r\n");
      out.write("                            <th>주문삭제</th>\r\n");
      out.write("                            <th>주문수정</th>\r\n");
      out.write("                          </tr>\r\n");
      out.write("                        </thead>\r\n");
      out.write("                        <tbody>\r\n");
      out.write("            ");

					String stored_file_name;
					for(i=0; i<cartList.size(); i++){
						CartBean cart = cartList.get(i);
						ProductBean prod = productdb.getproduct(cart.getProduct_number(), false);

						cart_number = cart.getCart_number();
						user_id = cart.getUser_id();
						product_number = cart.getProduct_number();
						product_count = cart.getProduct_count();
						
						product_name = prod.getProduct_name();
						product_price = prod.getProduct_price();
					
					stored_file_name = productdb.getImg(product_number).getStored_file_name();
			
      out.write("\r\n");
      out.write("                          <tr>\r\n");
      out.write("                          	<td>\r\n");
      out.write("                          		");
      out.write("\r\n");
      out.write("                          		<input type=\"checkbox\" value=\"");
      out.print( cart_number );
      out.write("\" name=\"cart_number\" id=\"cart");
      out.print(i);
      out.write("\" onchange=\"itemSum(cart_frm)\"/>\r\n");
      out.write("                          	</td>\r\n");
      out.write("                          	<td>\r\n");
      out.write("                          		<p style=\"line-height: 115px;\">");
      out.print( cart_number );
      out.write("</p>\r\n");
      out.write("                          		");
      out.write("\r\n");
      out.write("                          	</td>\r\n");
      out.write("                            <td>\r\n");
      out.write("                              <div class=\"avatar avatar-md\">\r\n");
      out.write("                                <img src=\"../img/");
      out.print(stored_file_name);
      out.write("\" alt=\"제품사진\" class=\"avatar-img rounded-circle\">\r\n");
      out.write("                                <!-- 사진 가져오기 -->\r\n");
      out.write("                              </div>\r\n");
      out.write("                            </td>\r\n");
      out.write("                            <td class=\"form-group col-md-2\">\r\n");
      out.write("                              <p class=\"mb-0 text-muted\"><a href=\"main.jsp?pages=../product/product_detail&product_number=");
      out.print(product_number);
      out.write("\" class=\"text-muted\"><strong>");
      out.print( product_name );
      out.write("</strong></a></p>\r\n");
      out.write("                              <!-- 제품명 가져오기 -->\r\n");
      out.write("                            </td>\r\n");
      out.write("                            <td class=\"form-group col-md-1\">\r\n");
      out.write("                            	<small class=\"mb-0 text-muted\">\r\n");
      out.write("                            		<input type=\"number\" style=\"text-align: center;\" class=\"form-control\" step=\"1\" min=\"1\" max=\"10\" value=\"");
      out.print( product_count );
      out.write("\" onchange=\"priceCal(");
      out.print( i );
      out.write(")\" id=\"count");
      out.print( i );
      out.write("\" name=\"product_count\">	\r\n");
      out.write("                            		<input type=\"hidden\" style=\"text-align: center;\" class=\"form-control\" step=\"1\" min=\"1\" max=\"10\" value=\"");
      out.print( product_count );
      out.write("\" name=\"product_count");
      out.print( i);
      out.write("\">	\r\n");
      out.write("                            	</small>\r\n");
      out.write("                           	</td>\r\n");
      out.write("                            <td class=\"form-group col-md-1\">\r\n");
      out.write("                           		<input type=\"text\" style=\"text-align: center;\" class=\"form-control\" value=\"");
      out.print( product_count * product_price );
      out.write("\" name=\"product_price\" id=\"price");
      out.print( i );
      out.write("\" readonly />	\r\n");
      out.write("                           		<input type=\"hidden\" class=\"form-control\" value=\"");
      out.print( product_price );
      out.write("\" name=\"one_price\" id=\"one_price");
      out.print( i );
      out.write("\" readonly />	\r\n");
      out.write("                             ");
      out.write("\r\n");
      out.write("                              <!-- 가격 가져오기 -->\r\n");
      out.write("                            </td>\r\n");
      out.write("                            <td>\r\n");
      out.write("                            	<a href=\"main.jsp?pages=../cart/cartDelete&cart_number=");
      out.print( cart_number );
      out.write("\" class=\"btn btn-secondary btn-sm\">삭제하기</a>\r\n");
      out.write("                            </td>\r\n");
      out.write("                            <td>\r\n");
      out.write("                            	<a href=\"#\" class=\"btn btn-secondary btn-sm\" onclick=\"count(");
      out.print( i );
      out.write(")\">수정하기</a>\r\n");
      out.write("                           	</td>\r\n");
      out.write("                          </tr>\r\n");
      out.write("                          <!-- <br> -->\r\n");
      out.write("						");

                          	/* total_price += product_count * product_price;
						
							if(product_price>=20000 || total_price == 0){
	                    		ship = 0;
	                    	} */
						} 
						
      out.write("		\r\n");
      out.write("                          <tr>\r\n");
      out.write("                          	<td colspan=\"2\" style=\"text-align: right;\">&nbsp;</td>\r\n");
      out.write("                          	<td colspan=\"2\" style=\"text-align: right;\"></td>\r\n");
      out.write("                          	<td colspan=\"2\" style=\"text-align: right;\"><strong>총 가격(원) &nbsp;&nbsp;:&nbsp;&nbsp; <span id=\"total\">");
      out.print( total_price);
      out.write("</span>(소계) + <span id=\"ship\">");
      out.print( ship );
      out.write("</span>(배송비) = </strong></td>\r\n");
      out.write("                          	<td colspan=\"2\" style=\"text-align: center;\"><strong style=\"color:red\" id=\"ships\"><b>");
      out.print( total_price + ship );
      out.write("</b></strong></td>\r\n");
      out.write("                          </tr>\r\n");
      out.write("                          <tr>\r\n");
      out.write("                          	<td colspan=\"7\" style=\"text-align: right;\">\r\n");
      out.write("                          		20000원 이상 구매 시 무료배송\r\n");
      out.write("                          	</td>\r\n");
      out.write("	                          <td style=\"text-align:right\">\r\n");
      out.write("	                        	<input type=\"button\" class=\"btn btn-primary btn-lg btn-block\" value=\"구매하기\" onclick=\"check()\">\r\n");
      out.write("		                	  </td>\r\n");
      out.write("                		  </tr>\r\n");
      out.write("                        </tbody>\r\n");
      out.write("                      </table>\r\n");
      out.write("                      </form>\r\n");
      out.write("                      <!-- <input type=\"text\" value=\"\" id=\"total\" /> -->\r\n");
      out.write("                    </div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                </div> <!-- customized table -->\r\n");
      out.write("              </div> <!-- end section -->\r\n");
      out.write("            </div> <!-- .col-12 -->\r\n");
      out.write("          </div> <!-- .row -->\r\n");
      out.write("        </div> <!-- .container-fluid -->\r\n");
      out.write("    </div> <!-- .wrapper -->\r\n");
      out.write("    <script src=\"../js/jquery.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write(" 	function count(i){\r\n");
      out.write(" 		var counted = \"count\"+i;\r\n");
      out.write(" 		var cartNum = \"cart\"+i;\r\n");
      out.write(" 		var count = document.getElementById(counted).value;\r\n");
      out.write(" 		var cart = document.getElementById(cartNum).value;\r\n");
      out.write(" 		\r\n");
      out.write(" 		location.href=\"main.jsp?pages=../cart/cartEdit&cart_number=\"+cart+\"&product_count=\"+count;\r\n");
      out.write(" 	}\r\n");
      out.write(" 	function priceCal(i){\r\n");
      out.write(" 		var counted = \"count\"+i;\r\n");
      out.write(" 		var cartprice = \"price\"+i;\r\n");
      out.write(" 		var one = \"one_price\"+i;\r\n");
      out.write(" 		var count = document.getElementById(counted).value;\r\n");
      out.write(" 		var price = document.getElementById(one).value;\r\n");
      out.write(" 		var calc = count*price;\r\n");
      out.write(" 		\r\n");
      out.write(" 		document.getElementById(cartprice).value = calc;\r\n");
      out.write(" 		itemSum(cart_frm);\r\n");
      out.write(" 	}\r\n");
      out.write(" 	function check() {\r\n");
      out.write(" 		if ($(\"input:checkbox[name='cart_number']\").is(\":checked\")==false) {\r\n");
      out.write(" 			alert(\"적어도 하나는 선택하여 주십시오.\");\r\n");
      out.write(" 			return;\r\n");
      out.write(" 		}else{\r\n");
      out.write(" 			$(\"form[name=cart_frm]\").submit();\r\n");
      out.write(" 		}\r\n");
      out.write(" 	}\r\n");
      out.write(" 	function itemSum(frm)\r\n");
      out.write(" 	{\r\n");
      out.write(" 	   var sum = 0;\r\n");
      out.write(" 	   var count = frm.cart_number.length;\r\n");
      out.write(" 	   for(var i=0; i < count; i++ ){\r\n");
      out.write(" 	       if( frm.cart_number[i].checked == true ){\r\n");
      out.write(" 		    sum += parseInt(frm.one_price[i].value) * parseInt(frm.product_count[i].value);\r\n");
      out.write(" 	       }\r\n");
      out.write(" 	   }\r\n");
      out.write(" 	  document.getElementById(\"total\").innerText = sum;\r\n");
      out.write(" 	   if(sum >= 20000){\r\n");
      out.write(" 		   sum = sum;\r\n");
      out.write("	 	  document.getElementById(\"ship\").innerText = 0;\r\n");
      out.write(" 	   } else{\r\n");
      out.write(" 		   sum += 3000;\r\n");
      out.write("	 	  document.getElementById(\"ship\").innerText = 3000;\r\n");
      out.write(" 	   }\r\n");
      out.write(" 	  document.getElementById(\"ships\").innerText = sum;\r\n");
      out.write(" 	}\r\n");
      out.write(" 	</script>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
