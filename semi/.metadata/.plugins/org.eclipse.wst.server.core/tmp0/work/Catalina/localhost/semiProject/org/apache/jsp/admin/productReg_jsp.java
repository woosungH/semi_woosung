/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-28 01:51:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import product.ProductBean;
import product.ProductDBBean;

public final class productReg_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("product.ProductBean");
    _jspx_imports_classes.add("product.ProductDBBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");

	int product_number = 0;
	String pageNum = request.getParameter("pageNum");
	String product_name = "";
	
	if (request.getParameter("product_number") != null) {
		product_number = Integer.parseInt(request.getParameter("product_number"));
	}
	
	ProductDBBean updb = ProductDBBean.getInstance();
	ProductBean upbd = updb.getproduct(product_number, false);
	
	if (upbd != null) {
		product_name = upbd.getProduct_name();
	}

      out.write("\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title></title>\r\n");
      out.write("<script language=\"JavaScript\" src=\"../js/uploadProduct.js?\" charset=\"utf-8\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"vertical  dark  \">\r\n");
      out.write("	<div class=\"wrapper\">\r\n");
      out.write("		<form method=\"post\" name=\"reg_frm\" action=\"adminIndex.jsp?pages=productReg_ok\" enctype=\"multipart/form-data\">\r\n");
      out.write("	        <div class=\"container-fluid\">\r\n");
      out.write("	          <div class=\"row justify-content-center\">\r\n");
      out.write("	            <div class=\"col-12\">\r\n");
      out.write("	              <h2 class=\"h3 mb-3 page-title\">상품등록</h2>\r\n");
      out.write("	                <div class=\"card shadow\">\r\n");
      out.write("	                	<div class=\"card-body\">\r\n");
      out.write("	                  <div class=\"row\">\r\n");
      out.write("	                      <div class=\"col-md-12\">\r\n");
      out.write("	                        <div class=\"form-group mb-3\">\r\n");
      out.write("	                            <label for=\"custom-select\">상품 카테고리</label>\r\n");
      out.write("	                            <select class=\"custom-select\" id=\"custom-select\" name=\"category_code\">\r\n");
      out.write("	                            <option selected value=\"none\">카테고리를 선택하세요</option>\r\n");
      out.write("	                            <option value=\"t-shirt\">티셔츠</option>\r\n");
      out.write("	                            <option value=\"hoodie\">후드티</option>\r\n");
      out.write("	                            <option value=\"knit\">니트/스웨터</option>\r\n");
      out.write("	                            <option value=\"shirt\">셔츠/남방</option>\r\n");
      out.write("	                            <option value=\"pants\">바지</option>\r\n");
      out.write("	                            <option value=\"blue-jeans\">청바지</option>\r\n");
      out.write("	                            </select>\r\n");
      out.write("	                          </div>\r\n");
      out.write("	                      <div class=\"form-group mb-3\">\r\n");
      out.write("	                        <label for=\"productName\">상품명</label>\r\n");
      out.write("	                        <input type=\"text\" id=\"productName\" name=\"product_name\" class=\"form-control\" />\r\n");
      out.write("	                      </div>\r\n");
      out.write("	                      <div class=\"form-group mb-3\">\r\n");
      out.write("	                        <label for=\"productPrice\">상품 가격(원)</label>\r\n");
      out.write("	                        <input type=\"number\" id=\"productPrice\" name=\"product_price\" class=\"form-control\" />\r\n");
      out.write("	                      </div>\r\n");
      out.write("	                      <div class=\"form-group mb-3\">\r\n");
      out.write("	                        <label for=\"productStock\">재고 수량(개)</label>\r\n");
      out.write("	                        <input type=\"number\" id=\"productStock\" name=\"product_stock\" class=\"form-control\" />\r\n");
      out.write("	                      </div>\r\n");
      out.write("	                      <div class=\"form-group mb-3\">\r\n");
      out.write("	                       <label for=\"content\">상품 상세 설명</label>\r\n");
      out.write("	                 		<div id=\"editor\" style=\"min-height:500px;\" contenteditable=\"true\">\r\n");
      out.write("	                 		</div>\r\n");
      out.write("	                  		<input type=\"hidden\" value=\"\" name=\"product_desc\" id=\"content\">\r\n");
      out.write("	                      </div>\r\n");
      out.write("	                      <div class=\"form-group mb-3\">\r\n");
      out.write("	                      <label for=\"fileinput\">이미지</label>\r\n");
      out.write("	                      <!-- <input type=\"file\" id=\"example-fileinput\" class=\"form-control-file\" name=\"product_img\" onchange=\"setThumbnail(event);\" />\r\n");
      out.write("							<div id=\"image_container\" style=\"width: 150px; height: 150px;\"></div>\r\n");
      out.write("	                      </div> -->\r\n");
      out.write("	                        <!-- 첨부파일(이미지파일만 업로드가능) -->\r\n");
      out.write("							<input type=\"file\" id=\"fileinput\" name=\"product_img\" accept=\"image/*\">\r\n");
      out.write("							\r\n");
      out.write("							<!-- 이미지 미리보기 영역 -->\r\n");
      out.write("							<div id=\"imgViewArea\" style=\"margin-top:10px; display:none;\">\r\n");
      out.write("								<img id=\"imgArea\" style=\"width:200px; height:200px;\" onerror=\"imgAreaError()\"/>\r\n");
      out.write("							</div>\r\n");
      out.write("	                      <div style=\"text-align:center;\">\r\n");
      out.write("	                      <input type=\"button\" class=\"btn mb-2 btn-primary\" value=\"목록\" onclick=\"location.href='adminIndex.jsp?pages=productList'\" />\r\n");
      out.write("	                      <input type=\"reset\" class=\"btn mb-2 btn-primary\" value=\"다시 작성\" />\r\n");
      out.write("	                      <input type=\"button\" class=\"btn mb-2 btn-primary\" value=\"등록\" onclick=\"check_ok()\" />\r\n");
      out.write("	                      </div>\r\n");
      out.write("	                    </div> <!-- /.col -->\r\n");
      out.write("	               		 </div> <!-- row /.col -->\r\n");
      out.write("	               		 </div> <!-- card -->\r\n");
      out.write("	             	 </div> <!-- end section -->\r\n");
      out.write("	           	 </div> <!-- .col-12 -->\r\n");
      out.write("	          	</div> <!-- .row -->\r\n");
      out.write("	          </div> <!-- .row -->\r\n");
      out.write("		</form>\r\n");
      out.write("     </div> <!-- .container-fluid -->\r\n");
      out.write("     \r\n");
      out.write("    <script src=\"../js/jquery.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("	// 콘텐츠 수정 :: 사진 수정 시 이미지 미리보기\r\n");
      out.write("	function readURL(input) {\r\n");
      out.write("		if (input.files && input.files[0]) {\r\n");
      out.write("			var reader = new FileReader();\r\n");
      out.write("			reader.onload = function(e) {\r\n");
      out.write("				$('#imgArea').attr('src', e.target.result); \r\n");
      out.write("			}\r\n");
      out.write("			reader.readAsDataURL(input.files[0]);\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	$(\":input[name='product_img']\").change(function() {\r\n");
      out.write("		if( $(\":input[name='product_img']\").val() == '' ) {\r\n");
      out.write("			$('#imgArea').attr('src' , '');  \r\n");
      out.write("		}\r\n");
      out.write("		$('#imgViewArea').css({ 'display' : '' });\r\n");
      out.write("		readURL(this);\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("	// 이미지 에러 시 미리보기영역 미노출\r\n");
      out.write("	function imgAreaError(){\r\n");
      out.write("		$('#imgViewArea').css({ 'display' : 'none' });\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
