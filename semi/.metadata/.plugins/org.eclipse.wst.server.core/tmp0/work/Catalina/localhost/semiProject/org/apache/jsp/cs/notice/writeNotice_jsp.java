/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-22 03:51:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.cs.notice;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import cs.NoticeBean;
import cs.NoticeDBBean;

public final class writeNotice_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("cs.NoticeBean");
    _jspx_imports_classes.add("cs.NoticeDBBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	int  n_num = 0;
	String n_user_id;
	String n_title="";
	NoticeDBBean noticeDB = NoticeDBBean.getInstance();
	NoticeBean notice;
	if(request.getParameter("n_num")!=null){
		n_num = Integer.parseInt(request.getParameter("n_num"));
		notice=noticeDB.getNotice(n_num, false);
	} else{
		notice = null;
	}
	
	if(request.getParameter("n_user_id")!=null){
		n_user_id=request.getParameter("n_user_id");
	} else{
		n_user_id="";
		response.sendRedirect("listNotice.jsp");
	}
	
	
	if(notice != null){
		n_title = notice.getN_title();
	}
	String pageNum=null;
	if(request.getParameter("pageNum")==null){
		pageNum="1";
	}else{
		pageNum=request.getParameter("pageNum");		
	}

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"notice.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div style=\"text-align: center;\">\r\n");
      out.write("		<h1>글 올 리 기</h1>\r\n");
      out.write("		<form method=\"post\" action=\"write_okNotice.jsp\" name=\"wrt_frm\">\r\n");
      out.write("			<input type=\"hidden\" name=\"n_num\" value=\"");
      out.print( n_num );
      out.write("\">\r\n");
      out.write("			<table>\r\n");
      out.write("				<tr height=\"30\">\r\n");
      out.write("					<td width=\"80\">글제목</td>\r\n");
      out.write("					<td colspan=\"3\" width=\"460\">\r\n");
      out.write("						");

							if(n_num==0){
						
      out.write("\r\n");
      out.write("								<input type=\"text\" name=\"n_title\" size=\"64\">\r\n");
      out.write("						");

							} else{
						
      out.write("\r\n");
      out.write("								<input type=\"text\" name=\"n_title\" size=\"64\" value=\"[답변]:");
      out.print( n_title );
      out.write("\" readonly>								\r\n");
      out.write("						");

							}
						
      out.write("\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr height=\"30\">\r\n");
      out.write("					<td width=\"80\">이  름</td>\r\n");
      out.write("					<td colspan=\"3\" width=\"460\">\r\n");
      out.write("						<input type=\"text\" name=\"n_user_id\" size=\"64\" value=\"");
      out.print(n_user_id);
      out.write("\" readonly>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"4\">\r\n");
      out.write("						<textarea rows=\"10\" cols=\"65\" name=\"n_content\"></textarea>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td width=\"80\">암 호</td>\r\n");
      out.write("					<td width=\"140\">\r\n");
      out.write("						<input type=\"password\" name=\"n_pwd\" size=\"12\" maxlength=\"12\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td height=\"50\" colspan=\"4\" align=\"center\">\r\n");
      out.write("						<input type=\"button\" value=\"글쓰기\" onclick=\"onclick_ok()\">&nbsp;\r\n");
      out.write("						<input type=\"reset\" value=\"다시작성\">\r\n");
      out.write("						<input type=\"button\" value=\"글목록\" onclick=\"location.href='listNotice.jsp?&pageNum=");
      out.print(pageNum);
      out.write("'\">\r\n");
      out.write("					</td>	\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
