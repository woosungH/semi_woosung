/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-09-27 00:49:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.cs.notice;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.SimpleDateFormat;
import cs.NoticeBean;
import java.util.ArrayList;
import java.sql.Timestamp;
import cs.NoticeDBBean;

public final class noticeList_005fu_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("cs.NoticeBean");
    _jspx_imports_classes.add("java.sql.Timestamp");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("cs.NoticeDBBean");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      cs.NoticeBean notice = null;
      notice = (cs.NoticeBean) _jspx_page_context.getAttribute("notice", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (notice == null){
        notice = new cs.NoticeBean();
        _jspx_page_context.setAttribute("notice", notice, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');


	String pageNum = request.getParameter("pageNum");//

	String n_user_id = "test";
	
	session.setAttribute("n_user_id", n_user_id);

	if(pageNum == null){
		pageNum = "1";
	}
	
	NoticeDBBean noticeDB = NoticeDBBean.getInstance();
	ArrayList<NoticeBean> noticeList = noticeDB.listNotice(pageNum);
	ArrayList<Integer> n_numbers = new ArrayList<>();
	
	int n_num, n_hit;
	String n_title, user_id;
	Timestamp n_date;
	
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");
	

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write(" <body class=\"vertical  dark  \">\r\n");
      out.write("    <div class=\"wrapper\">\r\n");
      out.write("        <div class=\"container-fluid\">\r\n");
      out.write("          <div class=\"row justify-content-center\">\r\n");
      out.write("            <div class=\"col-12\">\r\n");
      out.write("              <div class=\"row\">\r\n");
      out.write("                <!-- Small table -->\r\n");
      out.write("                <div class=\"col-md-12 my-4\">\r\n");
      out.write("                  <h2 class=\"h4 mb-1\">공지 사항</h2>\r\n");
      out.write("                  <br />\r\n");
      out.write("                  <div class=\"col-md-12 my-4\">\r\n");
      out.write("                  <!-- 수정된 부분@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->\r\n");
      out.write("                  	<a href=\"main.jsp\">스토어 홈</a>> <a href=\"main.jsp?pages=../cs/cs_main\">고객센터</a>> 공지사항\r\n");
      out.write("                  <!-- 수정된 부분@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <div class=\"card shadow\">\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                      <!-- table -->\r\n");
      out.write("                      <table class=\"table table-borderless table-hover\">\r\n");
      out.write("                      <thead>\r\n");
      out.write("					      <tr>\r\n");
      out.write("					        <th style=\"text-align: center;\">번호</th>\r\n");
      out.write("					        <th style=\"text-align: center;\">글제목</th>\r\n");
      out.write("					        <th style=\"text-align: center;\">작성자</th>\r\n");
      out.write("					        <th style=\"text-align: center;\">작성일</th>\r\n");
      out.write("					        <th style=\"text-align: center;\">조회수</th>\r\n");
      out.write("					      </tr>\r\n");
      out.write("                        <tr>\r\n");
      out.write("    ");

	for(int i=0; i<noticeList.size();i++){
		notice = noticeList.get(i);
		
		n_num = notice.getN_num();
		n_title = notice.getN_title();
		user_id = notice.getUser_id();
		n_hit = notice.getN_hit();
		n_date = notice.getN_date();
		
		n_numbers.add(i, n_num);
	 
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td  align=\"center\">");
      out.print( n_num);
      out.write("</td>\r\n");
      out.write("					<td  align=\"center\" style=\"text-align: left\">\r\n");
      out.write("						<a href=\"main.jsp?pages=../cs/notice/noticeShow&n_num=");
      out.print( n_num );
      out.write("&pageNum=");
      out.print( pageNum );
      out.write("\">\r\n");
      out.write("							");
      out.print( n_title );
      out.write("\r\n");
      out.write("						</a>\r\n");
      out.write("					</td>\r\n");
      out.write("					<td  align=\"center\">\r\n");
      out.write("						");
      out.print( user_id );
      out.write("\r\n");
      out.write("					</td>\r\n");
      out.write("					<td  align=\"center\">\r\n");
      out.write("						");
      out.print( sdf.format(n_date) );
      out.write("\r\n");
      out.write("					</td>\r\n");
      out.write("					<td  align=\"center\">\r\n");
      out.write("						");
      out.print( n_hit );
      out.write("\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("		");

			}
			noticeList.clear();
		
      out.write("\r\n");
      out.write("		");

			if(session.getAttribute("n_user_id")!=null){
		
      out.write("\r\n");
      out.write("					<!-- 	    \r\n");
      out.write("					<td><span class=\"badge badge-pill badge-warning\">Hold</span></td>\r\n");
      out.write("			        <td><span class=\"badge badge-pill badge-danger\">Danger</span></td>\r\n");
      out.write("			        <td><span class=\"badge badge-pill badge-success\">Success</span></td>\r\n");
      out.write("			         -->\r\n");
      out.write("				      \r\n");
      out.write("				    </tbody>\r\n");
      out.write("				</table>\r\n");
      out.write("				<nav aria-label=\"Table Paging\" class=\"mb-0 text-muted\">\r\n");
      out.write("        			<ul class=\"pagination justify-content-center mb-0\">\r\n");
      out.write("        			<!-- 수정된 부분@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->\r\n");
      out.write("						");
      out.print( NoticeBean.userPageNumber(5) );
      out.write("\r\n");
      out.write("					<!-- 수정된 부분@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->\r\n");
      out.write("					</ul>\r\n");
      out.write("				</nav>\r\n");
      out.write("		");

				}
		
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("                  </div>\r\n");
      out.write("                </div> <!-- customized table -->\r\n");
      out.write("              </div> <!-- end section -->\r\n");
      out.write("            </div> <!-- .col-12 -->\r\n");
      out.write("          </div> <!-- .row -->\r\n");
      out.write("        </div> <!-- .container-fluid -->\r\n");
      out.write("    </div> <!-- .wrapper -->\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
